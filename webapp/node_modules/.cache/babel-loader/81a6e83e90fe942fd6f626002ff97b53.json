{"ast":null,"code":"import { print } from 'graphql';\nimport { checkDocument, removeDirectivesFromDocument } from 'apollo-utilities';\nvar connectionRemoveConfig = {\n  test: function (directive) {\n    return directive.name.value === 'client';\n  },\n  remove: true\n};\nvar removed = new Map();\nexport function removeClientSetsFromDocument(query) {\n  var cached = removed.get(query);\n  if (cached) return cached;\n  checkDocument(query);\n  var docClone = removeDirectivesFromDocument([connectionRemoveConfig], query);\n  removed.set(query, docClone);\n  return docClone;\n}\nexport function normalizeTypeDefs(typeDefs) {\n  var defs = Array.isArray(typeDefs) ? typeDefs : [typeDefs];\n  return defs.map(function (typeDef) {\n    return typeof typeDef === 'string' ? typeDef : print(typeDef);\n  }).map(function (str) {\n    return str.trim();\n  }).join('\\n');\n}","map":{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":"AAEA,SAAsC,KAAtC,QAAmD,SAAnD;AAEA,SAAS,aAAT,EAAwB,4BAAxB,QAA4D,kBAA5D;AAEA,IAAM,sBAAsB,GAAG;AAC7B,EAAA,IAAI,EAAE,UAAC,SAAD,EAAyB;AAAK,WAAA,SAAS,CAAC,IAAV,CAAe,KAAf,KAAA,QAAA;AAAiC,GADxC;AAE7B,EAAA,MAAM,EAAE;AAFqB,CAA/B;AAKA,IAAM,OAAO,GAAG,IAAI,GAAJ,EAAhB;AACA,OAAM,SAAA,4BAAA,CACJ,KADI,EACe;AAGnB,MAAM,MAAM,GAAG,OAAO,CAAC,GAAR,CAAY,KAAZ,CAAf;AACA,MAAI,MAAJ,EAAY,OAAO,MAAP;AAEZ,EAAA,aAAa,CAAC,KAAD,CAAb;AAEA,MAAM,QAAQ,GAAG,4BAA4B,CAC3C,CAAC,sBAAD,CAD2C,EAE3C,KAF2C,CAA7C;AAMA,EAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,QAAnB;AACA,SAAO,QAAP;AACD;AAED,OAAM,SAAA,iBAAA,CACJ,QADI,EACuD;AAE3D,MAAM,IAAI,GAAG,KAAK,CAAC,OAAN,CAAc,QAAd,IAA0B,QAA1B,GAAqC,CAAC,QAAD,CAAlD;AAEA,SAAO,IAAI,CACR,GADI,CACA,UAAA,OAAA,EAAO;AAAI,WAAC,OAAO,OAAP,KAAmB,QAAnB,GAA8B,OAA9B,GAAwC,KAAK,CAA9C,OAA8C,CAA9C;AAAwD,GADnE,EAEJ,GAFI,CAEA,UAAA,GAAA,EAAG;AAAI,WAAA,GAAG,CAAH,IAAA,EAAA;AAAU,GAFjB,EAGJ,IAHI,CAGC,IAHD,CAAP;AAID","sourceRoot":"","sourcesContent":["import { print } from 'graphql';\nimport { checkDocument, removeDirectivesFromDocument } from 'apollo-utilities';\nvar connectionRemoveConfig = {\n    test: function (directive) { return directive.name.value === 'client'; },\n    remove: true,\n};\nvar removed = new Map();\nexport function removeClientSetsFromDocument(query) {\n    var cached = removed.get(query);\n    if (cached)\n        return cached;\n    checkDocument(query);\n    var docClone = removeDirectivesFromDocument([connectionRemoveConfig], query);\n    removed.set(query, docClone);\n    return docClone;\n}\nexport function normalizeTypeDefs(typeDefs) {\n    var defs = Array.isArray(typeDefs) ? typeDefs : [typeDefs];\n    return defs\n        .map(function (typeDef) { return (typeof typeDef === 'string' ? typeDef : print(typeDef)); })\n        .map(function (str) { return str.trim(); })\n        .join('\\n');\n}\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}